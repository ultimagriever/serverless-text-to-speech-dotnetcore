{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "Serverless Text-to-Speech in .NET Core 2.0.",

  "Globals": {
    "Function": {
      "Runtime": "dotnetcore2.0",
      "CodeUri": "",
      "MemorySize": 1024,
      "Timeout": 30
    },
    "Api": {
      "Cors": {
        "AllowMethods": "'*'",
        "AllowHeaders": "'*'",
        "AllowOrigin": "'*'"
      }
    }
  },

  "Resources" : {

    "GetPosts" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
        "Handler": "ServerlessTextToSpeech::ServerlessTextToSpeech.Functions::GetAllPosts",
        "Role": {
          "Fn::GetAtt": ["ExecutionRole", "Arn"]
        },
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE": "PostsDotNet"
          }
        },
        "Events": {
          "GetAllPosts": {
            "Type": "Api",
            "Properties": {
              "Path": "/posts",
              "Method": "GET"
            }
          }
        }
      }
    },

    "GetPostById": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "ServerlessTextToSpeech::ServerlessTextToSpeech.Functions::GetPostById",
        "Role": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] },
        "Events": {
          "GetPostById": {
            "Type": "Api",
            "Properties": {
              "Path": "/posts/{id}",
              "Method": "GET"
            }
          }
        }
      }
    },

    "NewPost": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "ServerlessTextToSpeech::ServerlessTextToSpeech.Functions::CreateNewPost",
        "Role": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] },
        "Events": {
          "GetPostById": {
            "Type": "Api",
            "Properties": {
              "Path": "/posts",
              "Method": "POST"
            }
          }
        }
      }
    },

    "ConvertToAudio": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "ServerlessTextToSpeech::ServerlessTextToSpeech.Functions::ConvertToAudio",
        "Role": { "Fn::GetAtt" : [ "ExecutionRole", "Arn" ] },
        "Environment": {
          "Variables": {
            "BUCKET_NAME": { "Ref" : "AudioBucket" },
            "CLOUDFRONT_DISTRIBUTION": { "Fn::GetAtt": ["AudioBucketDistribution", "DomainName"] }
          }
        },
        "Events": {
          "DynamoDBTrigger": {
            "Type": "DynamoDB",
            "Properties": {
              "Stream": {
                "Fn::GetAtt": ["PostNetCore", "StreamArn"]
              },
              "StartingPosition": "TRIM_HORIZON"
            }
          }
        }
      }
    },

    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "TextToSpeechPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "polly:SynthesizeSpeech",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DescribeTable",
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:ListStreams",
                    "dynamodb:DescribeStream",
                    "sns:Publish",
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:GetBucketLocation",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },

    "PostNetCore": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "PostNetCore",
        "AttributeDefinitions": [
          {
            "AttributeName": "Id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      }
    },

    "AudioBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead"
      }
    },

    "AudioBucketOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "AudioBucket"
        }
      }
    },

    "AudioBucketDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "DependsOn": "AudioBucket",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "Origins": [
            {
              "DomainName": { "Fn::GetAtt": ["AudioBucket", "DomainName"] },
              "Id": "AudioBucketOrigin",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": "origin-access-identity/cloudfront/${AudioBucketOriginAccessIdentity}"
                }
              }
            }
          ],
          "PriceClass": "PriceClass_All",
          "DefaultCacheBehavior": {
            "TargetOriginId": "AudioBucketOrigin",
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": {
                "Forward": "none"
              }
            },
            "ViewerProtocolPolicy": "allow-all"
          }
        }
      }
    },

    "WebsiteBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html"
        }
      }
    },

    "WebsiteRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Fn::Join" : [
                  "",
                  [
                    "arn:aws:iam::",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":root"
                  ]
                ] }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AWSIoTDataAccess"]
      }
    }
  },

  "Outputs" : {
    "ApiURL" : {
        "Description" : "API endpoint URL for Prod environment",
        "Value" : { "Fn::Sub" : "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/" }
    },
    "WebsiteUrl": {
      "Description": "The front-end website's URL",
      "Value": { "Fn::GetAtt" : [ "WebsiteBucket", "WebsiteURL" ] }
    },
    "AudioBucketCdn": {
      "Description": "The CloudFront distribution serving the audio files",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Fn::GetAtt": ["AudioBucketDistribution", "DomainName"] }
          ]
        ]
      }
    }
  }
}
